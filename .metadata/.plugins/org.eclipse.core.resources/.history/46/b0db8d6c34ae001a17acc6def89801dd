import java.util.Scanner;

public class Prims_algo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Scanner s = new Scanner(System.in);
		int n = s.nextInt();
		int e = s.nextInt();
		int[][] adjmatrix = new int[n][n];
		
		for (int i = 0; i < e; i++) {
			int v1 = s.nextInt();
			int v2 = s.nextInt();
			int weight = s.nextInt();
			
			adjmatrix[v1][v2] = weight;
			adjmatrix[v2][v1] = weight;
		}
		
		prims(adjmatrix);
	}

	private static void prims(int[][] matrix) {
		// TODO Auto-generated method stub
		int n = matrix.length;
		boolean visited[] = new boolean[n];
		
		int parent[] = new int[n];
		int weight[] = new int[n];
		
		for (int i = 0; i < n; i++) {
			int minVertex = findMinVertex(visited,weight);
			visited[minVertex] = true;
			
			for (int j = 0; j < n; j++) {
				if(matrix[minVertex][j] !=0 && !visited[j]) {
					weight[j] = matrix[minVertex][j];
					parent[j] = minVertex;
				}
			}
		}
	}

	private static int findMinVertex(boolean[] visited, int[] weight) {
		// TODO Auto-generated method stub
		int minVertex = -1;
		for (int i = 0; i < visited.length; i++) {
			if(!visited[i] && (minVertex == -1 || weight[i] < weight[minVertex]))
				minVertex = i;
		}
		
		return minVertex;
	}

	
}
